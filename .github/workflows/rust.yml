# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Rust test
        run: |
          cargo test -v --test integration | awk '/test\sresult/{print}' >> bin/test.log

      - name: Publish Test Results
        id: test-results
        run: python bin/ci_test_helper.py
        if: always()

      - name: Set badge color
        shell: bash
        run: |
          case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
            success)
              echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
              ;;
            failure)
              echo "BADGE_COLOR=800000" >> $GITHUB_ENV
              ;;
            neutral)
              echo "BADGE_COLOR=696969" >> $GITHUB_ENV
              ;;
          esac
      - name: Create badge
        uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
        with:
          label: Tests
          status: '${{ fromJSON( steps.test-results.outputs.json ).stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
          color: ${{ env.BADGE_COLOR }}
          style: flat
          path: badge.svg

      - name: Upload badge to Gist
        # Upload only for main branch
        if: >
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main' ||
          github.event_name != 'workflow_run' && github.ref == 'refs/heads/main'
        uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gistURL: https://gist.githubusercontent.com/yi-ge/00fdcacb47689d14b8e9fdf7fb0f7288
          file: badge.svg

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Generate coverage
        env:
          PROJECT_NAME: 'rust_practice'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort'
          RUSTDOCFLAGS: '-Cpanic=abort'
          CARGO_INCREMENTAL: 0
        run: |
          cargo build --verbose
          cargo test --verbose --test integration
          zip -0 cov.zip $(find . -name "$PROJECT_NAME*.gc*" -print)
          cargo install grcov
          grcov cov.zip -s . -t lcov --llvm --ignore-not-existing --ignore "/*" -o lcov.info

      - name: Coveralls
        uses: coverallsapp/github-action@v1.1.2
        env:
          NODE_COVERALLS_DEBUG: 1
        with:
          github-token: ${{ secrets.github_token }}
          parallel: true
          flag-name: Unit
          path-to-lcov: 'lcov.info'

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
